// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`e2e koa middleware > Test evaluate endpoint with bad expression 2`] = `
{
  "evaluate": [
    {
      "error": {
        "message": "
[ Erreur syntaxique ]
➡️  Dans la règle \\"$EVALUATION\\"
✖️  L'expression suivante n'est pas valide :
   
   1+1
    ^
   Les opérateurs doivent être entourés d’espaces (\\"2 + 2\\" et non \\"2+2\\")
",
      },
      "warnings": [],
    },
  ],
  "warnings": [],
}
`;

exports[`e2e koa middleware > Test evaluate endpoint with empty expression 2`] = `
[
  {
    "dataPath": ".expressions",
    "keyword": "minItems",
    "message": "should NOT have fewer than 1 items",
    "params": {
      "limit": 1,
    },
    "schemaPath": "#/properties/expressions/oneOf/0/minItems",
  },
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be number",
    "params": {
      "type": "number",
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf/0/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be string",
    "params": {
      "type": "string",
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf/1/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be object",
    "params": {
      "type": "object",
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf/2/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "oneOf",
    "message": "should match exactly one schema in oneOf",
    "params": {
      "passingSchemas": null,
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf",
  },
  {
    "dataPath": ".expressions",
    "keyword": "oneOf",
    "message": "should match exactly one schema in oneOf",
    "params": {
      "passingSchemas": null,
    },
    "schemaPath": "#/properties/expressions/oneOf",
  },
]
`;

exports[`e2e koa middleware > Test evaluate endpoint with null expression 2`] = `
[
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be array",
    "params": {
      "type": "array",
    },
    "schemaPath": "#/properties/expressions/oneOf/0/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be number",
    "params": {
      "type": "number",
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf/0/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be string",
    "params": {
      "type": "string",
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf/1/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "type",
    "message": "should be object",
    "params": {
      "type": "object",
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf/2/type",
  },
  {
    "dataPath": ".expressions",
    "keyword": "oneOf",
    "message": "should match exactly one schema in oneOf",
    "params": {
      "passingSchemas": null,
    },
    "schemaPath": "#/properties/expressions/oneOf/1/oneOf",
  },
  {
    "dataPath": ".expressions",
    "keyword": "oneOf",
    "message": "should match exactly one schema in oneOf",
    "params": {
      "passingSchemas": null,
    },
    "schemaPath": "#/properties/expressions/oneOf",
  },
]
`;
